
{
var in;
in=InFeedback.ar(0,1);

}





(
	b=1.1;
r=1800/((b**23)+(b**22)+(b**21)+(b**20)+(b**19)+(b**18)+(b**17)+(b**16)+(b**15)+(b**14)+(b**13)+(b**12)+(b**11)+(b**10)+(b**9)+(b**8)+(b**7)+(b**6)+(b**5)+(b**4)+(b**3)+(b**2)+(b**1)+1);
a=Array.fill(24,{arg i;r*(1.1**(i))});
a.sum
)
a.round(0.1)

c=Array.fill(24,{arg i;(a[i])*((i+1)/24)})
d=c.round(0.1)
d=(c/2).round(0.1)


(Array.fill(24,{arg j;Array.fill((j+1),{arg j;a[j]}).sum})).round(0.1)

(
a=Array.new(4);
Array.fill(4,{arg i;i*2})
)
1800-1627.4
172/2


//for31

[ 9.9, 20.8, 32.7, 45.9, 60.4, 76.3, 93.9, 113.1, 134.3, 157.7, 183.3, 211.6, 242.6, 276.8, 314.3, 355.7, 401.1, 451.1, 506.1, 566.6, 633.2, 706.4, 786.9, 875.5, 973, 1080.2, 1198.1, 1327.8, 1470.4, 1627.4, 1800 ]
//bws
[ 0.15, 0.35, 0.6, 0.85, 1.15, 1.55, 2, 2.5, 3.1, 3.75, 4.55, 5.45, 6.5, 7.7, 9.1, 10.65, 12.45, 14.5, 16.85, 19.5, 22.55, 26, 29.9, 34.3, 39.3, 44.95, 51.35, 58.55, 66.75, 75.95, 86.3 ]*2


//for30
[ 10.9, 23, 36.2, 50.8, 66.8, 84.4, 103.8, 125.1, 148.6, 174.4, 202.8, 234, 268.3, 306.1, 347.7, 393.4, 443.7, 499, 559.8, 626.7, 700.4, 781.3, 870.4, 968.4, 1076.2, 1194.7, 1325.2, 1468.6, 1626.4, 1800 ]
//bws
[ 0.2, 0.4, 0.65, 0.95, 1.35, 1.75, 2.25, 2.85, 3.5, 4.3, 5.2, 6.25, 7.45, 8.8, 10.4, 12.2, 14.25, 16.6, 19.25, 22.3, 25.75, 29.7, 34.15, 39.2, 44.9, 51.4, 58.7, 66.95, 76.25, 86.8 ]


//for29
[ 12.1, 25.4, 40.1, 56.2, 73.9, 93.4, 114.9, 138.5, 164.5, 193, 224.4, 259, 297, 338.8, 384.8, 435.4, 491, 552.2, 619.6, 693.6, 775.1, 864.7, 963.3, 1071.7, 1191, 1322.2, 1466.6, 1625.4, 1800 ]
//bws
[ 0.2, 0.45, 0.75, 1.1, 1.55, 2, 2.6, 3.25, 4.05, 4.9, 5.95, 7.15, 8.5, 10.1, 11.9, 13.95, 16.3, 19, 22.05, 25.55, 29.5, 34, 39.1, 44.85, 51.4, 58.8, 67.2, 76.65, 87.3 ].sum


//for 28
[ 13.4, 28.2, 44.4, 62.2, 81.9, 103.5, 127.2, 153.4, 182.1, 213.7, 248.5, 286.8, 328.9, 375.2, 426.1, 482.2, 543.8, 611.6, 686.1, 768.2, 858.4, 957.6, 1066.8, 1186.9, 1319, 1464.3, 1624.2, 1800 ]
//bws
[ 0.25, 0.55, 0.85, 1.3, 1.75, 2.3, 2.95, 3.75, 4.6, 5.65, 6.85, 8.2, 9.75, 11.6, 13.65, 16, 18.7, 21.8, 25.3, 29.3, 33.85, 39, 44.85, 51.45, 58.95, 67.45, 77.05, 87.9 ]


//for 27
[ 14.9, 31.2, 49.2, 69, 90.7, 114.7, 141, 170, 201.8, 236.9, 275.4, 317.9, 364.5, 415.8, 472.3, 534.3, 602.6, 677.8, 760.4, 851.3, 951.3, 1061.3, 1182.3, 1315.4, 1461.8, 1622.9, 1800 ]

//bws
[ 0.3, 0.6, 1, 1.45, 2, 2.65, 3.4, 4.3, 5.3, 6.5, 7.85, 9.4, 11.25, 13.3, 15.7, 18.4, 21.5, 25.05, 29.1, 33.65, 38.9, 44.8, 51.55, 59.15, 67.8, 77.55, 88.55 ]

//for 26
[ 16.5, 34.6, 54.6, 76.5, 100.7, 127.2, 156.4, 188.5, 223.9, 262.7, 305.5, 352.5, 404.3, 461.2, 523.8, 592.7, 668.4, 751.8, 843.4, 944.3, 1055.2, 1177.2, 1311.4, 1459, 1621.4, 1800 ]
//bws
[ 0.3, 0.7, 1.15, 1.7, 2.3, 3.05, 3.95, 4.95, 6.1, 7.5, 9.05, 10.85, 12.95, 15.3, 18.05, 21.2, 24.75, 28.85, 33.5, 38.8, 44.8, 51.6, 59.35, 68.15, 78.05, 89.3 ]

//for 25
[ 18.3, 38.4, 60.6, 84.9, 111.7, 141.2, 173.6, 209.3, 248.5, 291.7, 339.2, 391.4, 448.8, 512, 581.5, 658, 742.1, 834.6, 936.3, 1048.3, 1171.4, 1306.9, 1455.8, 1619.7, 1800 ]
//bws
[ 0.35, 0.8, 1.35, 1.95, 2.7, 3.55, 4.55, 5.7, 7.05, 8.65, 10.45, 12.55, 14.95, 17.7, 20.85, 24.45, 28.6, 33.3, 38.65, 44.75, 51.7, 59.6, 68.55, 78.65, 90.15 ]

//for 24
[ 20.3, 42.7, 67.3, 94.4, 124.2, 156.9, 193, 232.6, 276.2, 324.2, 376.9, 434.9, 498.8, 569, 646.2, 731.2, 824.7, 927.5, 1040.6, 1165, 1301.8, 1452.3, 1617.9, 1800 ]
//bws
[ 0.4, 0.9, 1.5, 2.3, 3.1, 4.1, 5.3, 6.6, 8.2, 10, 12.1, 14.5, 17.3, 20.5, 24.1, 28.3, 33.1, 38.6, 44.8, 51.8, 59.9, 69, 79.3, 91.1 ]


[1.2].round(0.25)